name: Windows C++ With MSVC

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        # Navigate to the root directory
        cd ${{ github.workspace }}

        # Install and bootstrap Vcpkg
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        .\bootstrap-vcpkg.bat

        # Install required libraries
        .\vcpkg.exe install curl:x64-windows libpng:x64-windows zlib:x64-windows glew:x64-windows glbinding:x64-windows glm:x64-windows

    - name: List contents of C:/vcpkg/installed/x64-windows
      run: |
        # Navigate to the root directory
        cd ${{ github.workspace }}
        
        # List contents of the installed libraries directory
        Get-ChildItem -Recurse .\vcpkg\installed\x64-windows

    - name: Configure with CMake
      run: |
        # Navigate to the root directory
        cd ${{ github.workspace }}
        
        # Create build directory
        mkdir build
        cd build

        # Configure with CMake
        cmake -DCMAKE_TOOLCHAIN_FILE=.\vcpkg\scripts\buildsystems\vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows -DCMAKE_PREFIX_PATH=.\vcpkg\installed\x64-windows ..

    - name: Build with MSBuild
      run: |
        # Navigate to the build directory
        cd ${{ github.workspace }}/build

        # Build with MSBuild
        msbuild /p:Configuration=Release /p:Platform=x64

    - name: Debug Build Contents
      run: |
        # Navigate to the build directory
        cd ${{ github.workspace }}/build

        # Debugging: List contents of the build directory
        Get-ChildItem -Recurse

    - name: Copy Libraries to Artifact
      run: |
        # Navigate to the build directory
        cd ${{ github.workspace }}/build

        # Copy the DLL to the workspace
        Copy-Item -Path .\UFOCells.dll -Destination $env:GITHUB_WORKSPACE

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ufo-libraries
        path: |
          ${{ github.workspace }}/UFOCells.dll
